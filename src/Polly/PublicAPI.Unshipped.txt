Polly.AsyncPolicy.ExecuteAsync(System.Func<System.Threading.Tasks.ValueTask> action) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask> action, Polly.Context context) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.Tasks.ValueTask<TResult>> action) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
virtual Polly.AsyncPolicy.ImplementationAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
virtual Polly.AsyncPolicy.ImplementationAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.Tasks.ValueTask<TResult>> action) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.AsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
virtual Polly.AsyncPolicy<TResult>.ImplementationAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync(System.Func<System.Threading.Tasks.ValueTask> action) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask> action, Polly.Context context) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.Tasks.ValueTask<TResult>> action) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy.ExecuteAsync<TResult>(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.Tasks.ValueTask<TResult>> action) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, System.Collections.Generic.IDictionary<string, object> contextData, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>
Polly.IAsyncPolicy<TResult>.ExecuteAsync(System.Func<Polly.Context, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>> action, Polly.Context context, System.Threading.CancellationToken cancellationToken, bool continueOnCapturedContext) -> System.Threading.Tasks.ValueTask<TResult>